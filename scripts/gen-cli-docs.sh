#!/usr/bin/env bash
set -euo pipefail

export LC_ALL=C
export LANG=C

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
repo_root="$(cd "${script_dir}/.." && pwd)"
cd "$repo_root"

out_file="docs/cli.md"

mkdir -p "$(dirname "$out_file")"

tmp_file="$(mktemp)"
trap 'rm -f "$tmp_file"' EXIT

if ! top_help=$(./wgx --help 2>&1); then
  echo "Failed to capture top-level help output" >&2
  exit 1
fi

mapfile -t commands < <(./wgx --list | grep -v '^[[:space:]]*$' | sort -u)

{
  echo "# wgx CLI Reference"
  echo
  echo "> Generated by \`scripts/gen-cli-docs.sh\`. Do not edit manually."
  echo
  echo "## Global usage"
  echo
  echo '```'
  printf '%s\n' "$top_help"
  echo '```'
  echo
  echo "## Commands"
  echo
} >"$tmp_file"

for cmd in "${commands[@]}"; do
  echo "### ${cmd}" >>"$tmp_file"
  echo >>"$tmp_file"

  cmd_help=""
  exit_code=0
  # Try common help flags and the `help <cmd>` fallback
  if ! cmd_help=$(./wgx "$cmd" --help 2>&1); then
    exit_code=$?
    if ! cmd_help=$(./wgx "$cmd" -h 2>&1); then
      exit_code=$?
      if ! cmd_help=$(./wgx help "$cmd" 2>&1); then
        exit_code=$?
      else
        exit_code=0
      fi
    else
      exit_code=0
    fi
  fi

  has_structured_help=0
  saw_general_help=0
  if [[ $exit_code -eq 0 ]]; then
    if printf '%s\n' "$cmd_help" | grep -qi '^usage'; then
      if [[ "$cmd" == "help" ]] || [[ "$cmd_help" != "$top_help" ]]; then
        has_structured_help=1
      else
        saw_general_help=1
        cmd_help=""
      fi
    fi
  fi

  if (( has_structured_help )); then
    echo '```' >>"$tmp_file"
    printf '%s\n' "$cmd_help" >>"$tmp_file"
    echo '```' >>"$tmp_file"
  else
    if (( saw_general_help )); then
      echo "_Command does not provide structured --help output._" >>"$tmp_file"
    elif [[ -z "$cmd_help" && $exit_code -eq 0 ]]; then
      echo "_No dedicated --help output available._" >>"$tmp_file"
    elif [[ $exit_code -eq 0 ]]; then
      echo "_Command does not provide structured --help output._" >>"$tmp_file"
    else
      echo "_Failed to capture --help output (exit ${exit_code})._" >>"$tmp_file"
      if [[ -n "$cmd_help" ]]; then
        echo >>"$tmp_file"
        echo '```' >>"$tmp_file"
        printf '%s\n' "$cmd_help" >>"$tmp_file"
        echo '```' >>"$tmp_file"
      fi
    fi
  fi

  echo >>"$tmp_file"
done

mv "$tmp_file" "$out_file"
